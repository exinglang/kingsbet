<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kingsbet.wzry.dao.UserDao">
    <!-- 目的：为dao接口方法提供sql语句配置 -->
    <select id="queryById" resultType="User" parameterType="string">
        <!-- 具体的sql -->
        SELECT
        str_nickname,user_id
        FROM
        t_user
        WHERE
        user_id = #{id}
    </select>
    <!--<insert id="register"  >-->
    <!--insert-->
    <!--into-->
    <!--t_user(id,pwd,createtime)-->
    <!--values-->
    <!--(#{phone},#{pwd},#{time})-->

    <!--</insert>-->


    <select id="getUserIdByPhone" resultType="int">
        <!-- 具体的sql -->
        SELECT
        id
        FROM
        t_user
        WHERE
        phone = #{phone}
    </select>


    <resultMap type="User" id="userInfo">
        <result column="diamond" property="diamond"/>
        <result column="balance" property="balance"/>
    </resultMap>

    <select id="userInfo" resultMap="userInfo">
        <!-- 具体的sql -->
        SELECT
        diamond,balance
        FROM
        t_user
        WHERE
        id = #{userid}
    </select>

    <insert id="register">
        insert
        into
        t_user(phone,pwd,createtime)
        values
        (#{phone},#{pwd},#{time})

    </insert>

    <update id="charge">
UPDATE  t_user  SET  diamond = diamond+#{amount} WHERE id=#{userid};

insert into t_user_account_record(user_id,diamond,balance,type,time) values (#{userid},#{amount},0,1,#{time})

    </update>

    <update id="diamondtobalance">
 insert into t_user_account_record(user_id,diamond,balance,type,time)  select id,-diamond,diamond*100,2,#{time} from t_user where id=#{userid};

 UPDATE  t_user  SET  balance =balance+ diamond*100,diamond=0 WHERE id=#{userid};

    </update>
    <update id="balanceexchange">
        UPDATE  t_user  SET  balance = balance+#{amount} WHERE id=#{userid};

        insert into t_user_account_record(user_id,balance,diamond,type,time) values (#{userid},#{amount},0,3,#{time})

    </update>

    <insert id="saveException">

        insert into t_exception(time,errordescribe) values (#{time},#{describe})

    </insert>


    <select id="getdiamond" resultType="int">

        SELECT  diamond from t_user  WHERE id=#{userid}

    </select>


    <select id="checkPhone" resultType="int">
        <!-- 具体的sql -->
        SELECT
        COUNT(*)
        FROM
        t_user
        where phone=#{phone}
    </select>

    <select id="checkPwd" resultType="int">
        <!-- 具体的sql -->
        SELECT
        COUNT(*)
        FROM
        t_user
        where phone=#{phone} and pwd=#{pwd}
    </select>


    <resultMap type="OrderHistory" id="map4">
        <result column="status" property="status"/>
        <result column="time" property="time"/>
        <result column="title_1" property="title1"/>
        <result column="title_2" property="title2"/>
        <result column="pankouname" property="pankouname"/>
        <result column="teamname" property="teamname"/>
        <result column="user_bet_amount" property="bet"/>
        <result column="user_bet_earn" property="betwin"/>
    </resultMap>

    <select id="orderhistory" resultMap="map4">
     SELECT    c.title_1,c.title_2,c.status,c.time  ,e.name as pankouname ,f.name as teamname ,a.user_bet_amount,a.user_bet_earn FROM
        t_user_bet_detail AS a  JOIN  t_schedule_pankou_detail AS b
        ON  a.user_id =#{userid} and  a.t_schedule_pankou_detail_id=b.id  join t_schedule as c on b.schedule_id=c.schedule_id
         join t_schedule_pankou as d  on  b.pankou_id=d.id join t_pankou_type as e  on d.pankou_type_id = e.id join t_mteam as f on b.team_id=f.team_id
       order by  time desc limit #{pageindex},#{pagesize}
    </select>
    <!--<select id="queryAll" resultType="Book">-->
    <!--SELECT-->
    <!--book_id,-->
    <!--name,-->
    <!--number-->
    <!--FROM-->
    <!--book-->
    <!--ORDER BY-->
    <!--book_id-->
    <!--LIMIT #{offset}, #{limit}-->
    <!--</select>-->

    <!--<update id="reduceNumber">-->
    <!--UPDATE book-->
    <!--SET number = number - 1-->
    <!--WHERE-->
    <!--book_id = #{bookId}-->
    <!--AND number > 0-->
    <!--</update>-->
</mapper>